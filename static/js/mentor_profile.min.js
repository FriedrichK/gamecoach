var mentorProfileApp=angular.module("mentorProfileApp",["ngAnimate","gamecoachShared","gamecoachNavigation"]).config(["$locationProvider",function(a){a.html5Mode(!0)}]),mentorProfileApp=angular.module("mentorProfileApp");mentorProfileApp.controller("ProfileController",function(a,b,c,d,e,f,g,h,i){angular.element(document).ready(function(){var b=a.profile.mentorId;c.getMentorProfile(a.profile.mentorId,function(b){a.profile=b,a.regions=d.buildRegionList(b),a.availabilityProcessed=e.buildAvailabilityList(b),a.rolesProcessed=f.buildRoleList(b),a.mentoringProcessed=g.buildMentoringList(b),a.heroesProcessed=h.buildHeroList(b),a.statistics=i.buildStatisticsList(b)}),a.profilePictureUri="/data/mentor/"+a.profile.mentorId+"/profilePicture",a.contact=function(){window.location="/mentor/"+b+"/contact"}})});var mentorProfileApp=angular.module("mentorProfileApp");mentorProfileApp.directive("valueAsPercent",function(){return{restrict:"AE",replace:"true",template:"<a>{{valueAsPercent}}</a>",link:function(a,b,c){a.$watch(c.valueAsPercent,function(){if(a.profile&&a.profile.data&&a.profile.data.response_rate){var b=100*a.profile.data.response_rate;a.valueAsPercent=b.toFixed(1)+"%"}})}}}),mentorProfileApp.directive("responseTimeAsText",function(){return{restrict:"AE",replace:"true",template:"<a>{{responseTimeAsText}}</a>",link:function(a,b,c){a.$watch(c.responseTimeAsText,function(){if(a.profile&&a.profile.data&&a.profile.data.response_time){var b=a.profile.data.response_time,c="More than one day";7>b&&(c=b+" days"),1>b&&(c="Less than a day"),7===b&&(c="One week"),b>7&&(c="More than a week"),a.responseTimeAsText=c}})}}});var mentorProfileApp=angular.module("mentorProfileApp");mentorProfileApp.filter("percentAsString",function(){return function(a){return Math.round(100*a,0)+"%"}});var mentorProfileApp=angular.module("mentorProfileApp");mentorProfileApp.factory("profileDataService",function(a){return{getMentorProfile:function(b,c){return a({url:"/api/mentor/"+b,method:"GET",params:{}}).then(function(a){c(a.data)})}}}),mentorProfileApp.factory("profileRegionService",function(a){return{buildRegionList:function(a){var b=this._buildRawRegionList(a);return this._orderRegionList(b)},_buildRawRegionList:function(b){if(!b.regions)return[];var c=[];return angular.forEach(b.regions,function(b,d){b===!0&&c.push({label:a.getNameForLabel("regions",d),identifier:d})}),c},_orderRegionList:function(b){var c=a.getLabelOrder("regions"),d=[];return angular.forEach(c,function(a){angular.forEach(b,function(b){b.identifier===a&&d.push(b)})}),d}}}),mentorProfileApp.factory("profileAvailabilityService",function(){return{buildAvailabilityList:function(a){var b=[];return b=b.concat(this._buildDayList(a)),b=b.concat(this._buildTimeList(a))},_buildDayList:function(a){if(!a.availability)return[];var b=[];return a.availability.anyday===!0&&(b=[{label:"Any day",identifier:"anyday"}]),a.availability.weekends===!0&&(b=[{label:"Weekends only",identifier:"weekends"}]),b},_buildTimeList:function(a){if(!a.availability)return[];var b=[];return a.availability.anytime===!0&&(b=[{label:"Any time",identifier:"anytime"}]),a.availability.evenings===!0&&(b=[{label:"Evenings only",identifier:"evenings"}]),b}}}),mentorProfileApp.factory("profileRoleService",function(a){var b=2;return{buildRoleList:function(a){if(!a.roles)return[];var c=this._buildRawList(a),d=this._divideRawListIntoColumns(c,b);return d},_buildRawList:function(a){var b=this,c=[];return angular.forEach(a.roles,function(a,d){a===!0&&c.push({label:b._getLabel(d),identifier:d})}),c},_divideRawListIntoColumns:function(a,b){for(var c=Math.ceil(a.length/b),d=[],e=0,f=b;f>e;e++){var g=e*c,h=(e+1)*c;d.push(a.slice(g,h))}return d},_getLabel:function(b){var c=a.getNameForLabel("roles",b);return c.charAt(0).toUpperCase()+c.slice(1)}}}),mentorProfileApp.factory("profileMentoringService",function(a){var b=2;return{buildMentoringList:function(a){if(!a.mentoring)return[];var c=this._buildRawList(a),d=this._divideRawListIntoColumns(c,b);return d},_buildRawList:function(a){var b=this,c=[];return angular.forEach(a.mentoring,function(a,d){a===!0&&c.push({label:b._getLabel(d),identifier:d})}),c},_divideRawListIntoColumns:function(a,b){for(var c=Math.ceil(a.length/b),d=[],e=0,f=b;f>e;e++){var g=e*c,h=(e+1)*c;d.push(a.slice(g,h))}return d},_getLabel:function(b){var c=a.getNameForLabel("mentoring",b);return c.charAt(0).toUpperCase()+c.slice(1)}}}),mentorProfileApp.factory("profileHeroService",function(){return{buildHeroList:function(a){if(!a||!a.data||!a.data.top_heroes)return[];var b=this,c=[];return angular.forEach(a.data.top_heroes,function(a){c.push({identifier:a,label:b._buildLabel(a)})}),c},_buildLabel:function(a){return a}}}),mentorProfileApp.factory("profileStatisticsService",function(a,b){return{buildStatisticsList:function(a){if(!a||!a.data||!a.data.statistics)return[];var c=this,d=[],e=this._parseStatistics(a.data.statistics);return angular.forEach(e,function(a,e){d.push({identifier:e,label:b.getNameForLabel("statistics",e),value:c._processValue(e,a)})}),d},_processValue:function(b,c){return"win_rate"===b?a("percentAsString")(c):a("number")(c,0)},_parseStatistics:function(a){return angular.fromJson(a)}}});var mentorProfileApp=angular.module("mentorProfileApp");mentorProfileApp.factory("profileLabelService",function(){return{labels:{regions:{useast:"US East",uswest:"US West",eueast:"EU East",euwest:"EU West",seasia:"SE Asia",russia:"Russia",southamerica:"South America",australia:"Australia"},roles:{carry:"carry",disabler:"disabler",ganker:"ganker",initiator:"initiator",jungler:"jungler",offlaner:"offlaner",pusher:"pusher",support:"support"},statistics:{games_played:"games played",win_rate:"win rate",solo_mmr:"solo MMR"},mentoring:{individual:"individual mentoring",team:"team mentoring",spectating:"mentoring while spectating",together:"mentoring while playing together",analysing:"analysing replies",questions:"general questions & answers",voicechat:"voice chat",textchat:"text chat"}},labelOrder:{regions:["useast","uswest","eueast","euwest","seasia","russia","southamerica","australia"],statistics:["games_played","win_rate","solo_mmr"]},getLabelForName:function(a,b){var c;return angular.forEach(this.labels[a],function(a,d){a===b&&(c=d)}),c},getNameForLabel:function(a,b){return this.labels[a][b]},getLabelOrder:function(a){return this.labelOrder[a]}}});